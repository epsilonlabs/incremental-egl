@test
operation testAssignment() {
	var a; 
	a := 1 + 2;
	assertEquals(a, 3);	
}

@test
operation testAssignmentToResultOfEquality() {
	var a; 
	a := 1 = 1;
	assertEquals(a, true);	
}

@test
operation testEqualityActsAsAssignment() {
	var a; 
	a = 1 + 2;
	assertEquals(a, 3);	
}

@test
operation testOuterEqualityActsAsAssignment() {
	var a; 
	a = 1 = 1;
	assertEquals(a, true);	
}

@test
operation testOtherRelationalExpressionIsUnaffected() {
	var a; 
	a := 2 > 1;
	assertEquals(a, true);	
}

@test
operation testOtherRelationalExpressionIsUnaffectedByRewrite() {
	var a; a = 2 > 1;
	assertEquals(a, true);
}

@test
operation testExtendedPropertyAssignmentUsesIdentity() {
	var x : Sequence;
	var y : Sequence;
	x.~extended = 1;
	assertEquals(1, x.~extended);
	assertTrue(y.~extended.isUndefined());
}
